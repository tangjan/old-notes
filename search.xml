<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HELLO WORLD</title>
    <url>/2000/01/29/hello/</url>
    <content><![CDATA[<p>HELLO WORLD</p>
<p>I AM TANGJIAYAN </p>
]]></content>
  </entry>
  <entry>
    <title>Web前端1：概论</title>
    <url>/2021/11/27/web1/</url>
    <content><![CDATA[<p>跟着这个学的：<a href="https://www.bilibili.com/video/BV1yx411d7Rc?from=search&amp;seid=6709307494925543999&amp;spm_id_from=333.337.0.0">Web前端开发_渡一教育_bilibili</a></p>
<p>此次学习的小目标是把博客搭建搞明白。<br>博客就当笔记来用了，所以记的东西可能很杂、不是很系统化。</p>
<h2 id="1-什么是Web前端？"><a href="#1-什么是Web前端？" class="headerlink" title="1. 什么是Web前端？"></a><strong>1. 什么是Web前端？</strong></h2><p><span style="color: red;">Web</span>是“网”的意思，这个网指的是互联网。</p>
<p><span style="color: red;">前端</span>是网页上呈现给用户的部分，前端涉及的技术有很多，最为典型的有3个：HTML、CSS和JavaScript，后续会详细介绍。与此相应的也有后端，即用户看不到的部分，数据库是后端技术中一个典型代表。概略地看，一个网站是由前后端两部分组成的。</p>
<h2 id="2-8020定律"><a href="#2-8020定律" class="headerlink" title="2. 8020定律"></a><strong>2. 8020定律</strong></h2><p>该定律也称二八定律，在这里解释为：20%的知识，有80%的场景可以用到；而其余80%的知识，只有20%的场景可以用到。  </p>
<p>也就是说，掌握一门技术20%的知识就可以投身到工作中了，但是求职面试时肯定会涉及到另外一些80%的知识，所以这80%的知识决定了你的竞争力以及你的专业程度。 </p>
<p>个人认为学习编程也应符合二八定律，即20%时间的学理论，80%的时间动手敲代码。</p>
<h2 id="3-关于术语"><a href="#3-关于术语" class="headerlink" title="3. 关于术语"></a><strong>3. 关于术语</strong></h2><p>可能有的人见到术语就很烦，为什么不用大白话来描述这个东西，而非要编一个术语出来呢？</p>
<p>术语的存在肯定是有它的道理的，促使术语出现的核心原因就是：人们懒。相比于术语，用大白话解释一个东西，肯定要花费更多的文字，说起来就要花更多的口舌，所以术语就诞生了，降低了人们的沟通成本。纵观人类的科技发展史，科技进步的主要动力之一也是因为懒，所以懒未必是个贬义词，因为懒而追求高效就会进步。</p>
<p>这一现象在其他领域也有体现，比如英语发音中的连读、弱读、失爆等。再比如各种网络流行词，喜大普奔、气抖冷、u1s1、yyds……</p>
<p>为了在业界中和同行沟通，术语的掌握是必须的。</p>
<h2 id="4-w3c、MDN、XML"><a href="#4-w3c、MDN、XML" class="headerlink" title="4. w3c、MDN、XML"></a><strong>4. w3c、MDN、XML</strong></h2><p>①<strong>w3c</strong>，World Wide Web Consortium，万维网联盟，一个非营利性国际组织，主要职能是制定一系列的web标准。HTML、CSS就是由w3c制定的。</p>
<p>所以以后在学习HTML和CSS的过程中遇到了什么问题，就尽量到w3c的官网（<a href="http://www.w3.org/">www.w3.org</a>）去寻求解决，毕竟是最专业最权威的。</p>
<p>②<strong>MDN</strong>，Mozilla Developer Network。w3c网站的内容都是英文的，一些术语看起来可能很吃力，这时就可以去MDN的官网（<a href="https://developer.mozilla.org/zh-CN/">www.mozilla.org</a>）探索，这里大部分是中文的。</p>
<p>③<strong>XML</strong>，eXtensible Markup Language，可扩展标记语言，简单地说，就是HTML的升级版，灵活性更高、功能更强大。</p>
<h2 id="5-HTML、CSS简介"><a href="#5-HTML、CSS简介" class="headerlink" title="5. HTML、CSS简介"></a><strong>5. HTML、CSS简介</strong></h2><p>①<strong>HTML</strong>：Hyper Text Markup Language，超文本标记语言，定义网页中有什么。</p>
<p>“超文本”即“超级文本”，就是用链接的方式，将文字组织到一起。我们可以把一个网页看作是一篇文章，有文字、图片等元素在里面，通过点击其中的某些文字图片，则可以跳转到另一个网页，这样的网页就是由超文本组成的。</p>
<p>“标记”即”&lt;head&gt;&lt;/head&gt;”这种东西，以后会挑一些常用的详细介绍。</p>
<p>②<strong>CSS</strong>：Cascading Style Sheets，层叠样式表，定义网页中的东西长什么样子。</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS">MDN中的定义</a>为：</p>
<blockquote>
<p>CSS是一种样式表语言，用来描述HTML或XML文档在屏幕、纸质、音频等其它媒体上的元素应该如何被渲染的问题。  </p>
</blockquote>
<p>举个例子，比如百度的主页网络正常地进入是这个样子的：</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/baidu_homepage.png" loading="lazy"></p>
<p>按下F12进入元素审查界面（我用的是Chrome浏览器），将一些CSS代码删除；</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/baidu_F12.png" loading="lazy"></p>
<p>网页就变成了这个样子：</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/baidu_F12_after.png" loading="lazy"></p>
<p>相信这种界面大家都有见到过，尤其是在网络不好的情况下。早些年的手机版QQ空间也是这样的。</p>
<p>从这个例子一看，CSS的作用就很形象了。</p>
<h2 id="6-浏览器"><a href="#6-浏览器" class="headerlink" title="6. 浏览器"></a><strong>6. 浏览器</strong></h2><p>浏览器是由shell（外壳）和core（内核）组成的。国内的很多浏览器，像360浏览器、QQ浏览器，它们没有自己的内核，都是采用别的公司的内核，所以在世界范围内没什么竞争力。</p>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/QQbrowser.png" loading="lazy"><em>来源：<a href="https://browser.qq.com/faq/#/detail/1">QQ浏览器帮助中心</a></em></p>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/360browser.png" loading="lazy"><em>来源：<a href="https://browser.360.cn/se/help/index.html">360安全浏览器帮助中心</a></em></p>
<p>所以现在提到市面上主流的浏览器，是指<span style="color: red;">有自己独立的内核</span>的浏览器。以下引用自<a href="https://baike.baidu.com/item/%E6%B5%8F%E8%A7%88%E5%99%A8/213911?fr=aladdin">百度百科</a>：</p>
<blockquote>
<p>浏览器的种类很多，但是主流的内核只有四种，各种不同的浏览器，就是在主流内核的基础上，添加不同的功能构成。<br>①<span style="color: red;">Trident内核</span><br>代表产品为Internet Explorer，又称其为IE内核。Trident（又称为MSHTML），是微软开发的一种排版引擎。使用Trident渲染引擎的浏览器有：IE、傲游、世界之窗浏览器、Avant、腾讯TT、Netscape 8、NetCaptor、Sleipnir、GOSURF、GreenBrowser和KKman等。<br>②<span style="color: red;">Gecko内核</span><br>代表作品为Mozilla Firefox。Gecko是一套开放源代码的、以C++编写的网页排版引擎，是最流行的排版引擎之一，仅次于Trident。使用它的最著名浏览器有Firefox、Netscape6至9。<br>③<span style="color: red;">WebKit内核</span><br>代表作品有Safari、Chrome。WebKit是一个开源项目，包含了来自KDE项目和苹果公司的一些组件，主要用于Mac OS系统，它的特点在于源码结构清晰、渲染速度极快。缺点是对网页代码的兼容性不高，导致一些编写不标准的网页无法正常显示。<br>④<span style="color: red;">Presto内核</span><br>代表作品Opera。Presto是由Opera Software开发的浏览器排版引擎，供Opera 7.0及以上使用。它取代了旧版Opera 4至6版本使用的Elektra排版引擎，包括加入动态功能，例如网页或其部分可随着DOM及Script语法的事件而重新排版。</p>
</blockquote>
<br>
<br>
<br>
<br>
<br>

<hr>
]]></content>
      <categories>
        <category>Web前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Web前端3：文本元素（h、p、span、pre）、块级元素、行级元素、HTML实体</title>
    <url>/2021/11/29/web3/</url>
    <content><![CDATA[<h2 id="1-HTML5元素周期表"><a href="#1-HTML5元素周期表" class="headerlink" title="1. HTML5元素周期表"></a><strong>1. <a href="https://www.xuanfengge.com/funny/html5/element/">HTML5元素周期表</a></strong></h2><h2 id="2-lt-h-gt"><a href="#2-lt-h-gt" class="headerlink" title="2. &lt;h&gt;"></a><strong>2. <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Heading_Elements">&lt;h&gt;</a></strong></h2><p>这里&lt;h&gt;表示&lt;h1&gt;~&lt;h6&gt;的统称，分别表示一级标题~六级标题。</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>一级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>二级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>三级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>四级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>五级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h6</span><span class="token punctuation">></span></span>六级标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h6</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/h1~h6.png" loading="lazy"><br>这里强调一点，根据web<span style="color:red">语义化</span>的概念，一级标题<span style="color:red">未必</span>比二级标题大。<br><span style="color:red">插曲小tip</span>：<br>①在VScode里，Ctrl + Enter可以直接切换光标至下一行行首，不论当前光标在哪（不同于只按Enter）；Shift + Ctrl + Enter直接切换至上一行行首<br>②<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/emmet1.png" loading="lazy"><br>这时按Tab键可以扩展为：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/emmet2.png" loading="lazy"><br>（需要安装Emmet插件，不过一般安装VScode时就这个插件也自动安装好了）</p>
<h2 id="3-lt-p-gt"><a href="#3-lt-p-gt" class="headerlink" title="3. &lt;p&gt;"></a><strong>3. <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/p">&lt;p&gt;</a></strong></h2><p>p即paragraph，表示段落。<br><span style="color:red">插曲小tip</span>：<br>乱数假文：Lorem ipsum。常用来测试排版，“Lorem + 数字”可生成指定个数单词。</p>
<h2 id="4-lt-span-gt"><a href="#4-lt-span-gt" class="headerlink" title="4. &lt;span&gt;"></a><strong>4. <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/span">&lt;span&gt;</a></strong></h2><p>span是一个没有语义的元素。<br>为什么会存在没有语义的元素呢？因为有的时候就是需要将网页中的某些内容设置为一个个没有语义的span，然后再进行处理，如：</p>
<pre class="language-none"><code class="language-none">光学三原色包含：红、绿、蓝</code></pre>
<p>现在我们想让“红、绿、蓝”这三个字分别显示为红色、绿色、蓝色，这时就可以用span元素分别将这三个字套起来，然后用CSS设置样式：</p>
<pre class="language-html" data-language="html"><code class="language-html">光学三原色包含：
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>红<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>、
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>green</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>绿<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>、
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>blue</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>蓝<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span></code></pre>
<p>实际效果：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/span.png" loading="lazy"><br>可见“红、绿、蓝”确实没什么语义，但又需要用某个元素将它们分割开，分别设计样式，这就是span的用武之地了。</p>
<h2 id="5-块级元素、行内元素"><a href="#5-块级元素、行内元素" class="headerlink" title="5. 块级元素、行内元素"></a><strong>5. 块级元素、行内元素</strong></h2><p>块级元素（Block-level Elements）后会另起一个新行，而行内元素（Inline Elements）不会。<br>一般情况下，行内元素只能包含数据和其他行内元素。而块级元素可以包含行内元素和其他块级元素。这种结构上的包含继承区别可以使块级元素创建比行内元素更”大型“的结构。<br>块级元素、行内元素的说法在HTML5中已经弃用，这种区别被一个更复杂的内容类别代替。“块级”类别大致相当于 HTML5 中的流内容类别，而“行内”类别相当于 HTML5 中的措辞内容 类别，不过除了这两个还有其他类别。<br>究其弃用的原因是因为语义化的要求，块级元素和行内元素的主要区别是元素结束后是否另起新行，这已经属于样式的范畴，应由CSS负责，而不应由是什么元素类别决定，元素的含义应该是语义上的，而不是样式上的，所以在HTML5中这种说法被弃用了。  </p>
<h2 id="6-lt-pre-gt"><a href="#6-lt-pre-gt" class="headerlink" title="6. &lt;pre&gt;"></a><strong>6. <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/pre">&lt;pre&gt;</a></strong></h2><p>一般HTML的文档全局中，连续空白的字符（空格、换行）会被折叠为一个，这可称为<span style="color:red">空白折叠</span>规则。<br>这个规则是有原因的，因为我们在书写HTML文档的时候经常会用到行首缩进来增加代码的可读性，有时一行显示不下了我们也会在行尾补充个换行。所以为了区分开代码与页面，产生了这个规则。<br>为了弥补这个规则，就可以使用pre。pre表示预定义格式文本。在该元素中的文本通常按照原文件中的编排，以等宽字体的形式展现出来，文本中的空白符（比如空格和换行符）都会显示出来。（但紧跟在&lt;pre&gt;开始标签后的换行符会被省略）</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>
        ___ ___         .__  .__                               .__       .___
        /   |   \   ____ |  | |  |   ____   __  _  _____________|  |    __| _/
       /    ~    \_/ __ \|  | |  |  /  _ \  \ \/ \/ /  _ \_  __ \  |   / __ | 
       \    Y    /\  ___/|  |_|  |_(  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>_</span><span class="token punctuation">></span></span> )  \     (  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>_</span><span class="token punctuation">></span></span> )  | \/  |__/ /_/ | 
        \___|_  /  \___  >____/____/\____/    \/\_/ \____/|__|  |____/\____ | 
              \/       \/                                                  \/
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/helloworld.png" loading="lazy"><br>pre可用于显示代码，不过通常会在外面再套一层&lt;code&gt;&lt;/code&gt;来增强语义性。</p>
<h2 id="7-实体（Entity）"><a href="#7-实体（Entity）" class="headerlink" title="7. 实体（Entity）"></a><strong>7. <a href="https://developer.mozilla.org/zh-CN/docs/Glossary/Entity">实体（Entity）</a></strong></h2><p>一些符号很难在网页上显示出来，比如你想在网页上显示如下内容：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>表示预定义格式文本元素</code></pre>
<p>直接输出的话&lt;pre&gt;会被忽略掉：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/entity1.png" loading="lazy"><br>这时就要用到实体了  ，实体的使用通常有两种方式：<br>①<span style="color:red">&amp;字母;</span><br>②<span style="color:red">&amp;#数字;</span><br>注意分号也是要加上的内容。<br>数字不太好记忆，推荐通过字母来使用实体。  </p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token entity named-entity" title="&lt;">&amp;lt;</span>pre<span class="token entity named-entity" title="&gt;">&amp;gt;</span>表示预定义格式文本元素</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/entity2.png" loading="lazy"><br>下面给出一些常用的实体：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pre</span><span class="token punctuation">></span></span>
    小于号：<span class="token entity named-entity" title="&lt;">&amp;lt;</span>    &amp;：<span class="token entity named-entity" title="&amp;">&amp;amp;</span>        版权符号：<span class="token entity named-entity" title="&copy;">&amp;copy;</span>
    大于号：<span class="token entity named-entity" title="&gt;">&amp;gt;</span>    空格：<span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pre</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/entity3.png" loading="lazy"></p>
<br>
<br>
<br>
<br>
<br>

<hr>
]]></content>
      <categories>
        <category>Web前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Web前端2：第一个网页、语义化</title>
    <url>/2021/11/28/web2/</url>
    <content><![CDATA[<p>直接拿出网页代码来，然后一点点解释：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token comment">&lt;!-- 注释内容 --></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.tangjiayan.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 糖加盐个人博客 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>

<h2 id="1-注释"><a href="#1-注释" class="headerlink" title="1. 注释"></a><strong>1. 注释</strong></h2><pre class="language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 注释内容 --></span></code></pre>
<p>VScode快捷键：Ctrl + /</p>
<h2 id="2-元素（elements）"><a href="#2-元素（elements）" class="headerlink" title="2. 元素（elements）"></a><strong>2. 元素（elements）</strong></h2><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.tangjiayan.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 糖加盐个人博客 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p><strong>①元素</strong> = 起始标记 + (元素属性) + 元素内容 + (结束标记) 。<br>元素属性、结束标记不是一定有的，所以加上了括号。<br>在这里，<br><span style="color: red;">起始标记</span>：&lt;a&gt;<br><span style="color: red;">元素属性</span>：href=”http://<span></span>www.<span></span>tangjiayan.<span></span>com”<br><span style="color: red;">元素内容</span>：糖加盐个人博客，<span style="color: red;"><br>结束标记</span>：&lt;/a&gt;<br>不同的元素有不同的功能，具体有哪些元素，可以在MDN的<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element">这个网页</a>上查看。<br>有些元素比较特殊，如&lt;meta&gt;，可以看到它没有像&lt;/meta&gt;这样的结束标记，我们称这样的元素为<span style="color: red;">空元素</span>，也就是说它没有内容。<br>内容是指开始标记和结束标记之间的东西，连结束标记都没有，当然也就没有内容。  </p>
<p><strong>②属性</strong> = 属性名 + 属性值 。<br>比如在这里href就是属性名，http://<span></span>www.<span></span>tangjiayan.<span></span>com就是属性值。<br>属性可以分为局部属性和全局属性。局部属性指某些元素特有的属性，全局属性指所有元素都具有这个属性。  </p>
<h2 id="3-元素的嵌套"><a href="#3-元素的嵌套" class="headerlink" title="3. 元素的嵌套"></a><strong>3. 元素的嵌套</strong></h2><p>①元素不可以相互嵌套。<br>正：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>误：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre>
<p>②父元素、子元素、祖先元素、后代元素、兄弟元素<br>看这些名词的字面就能知道其意思了，就不解释了。</p>
<h2 id="4-文档声明"><a href="#4-文档声明" class="headerlink" title="4. 文档声明"></a><strong>4. 文档声明</strong></h2><pre class="language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span></code></pre>
<p>这个东西就是文档声明，也就是HTML代码的第一行。作用是声明当前代码使用的标准，目前是HTML5。  </p>
<h2 id="5-lt-html-gt-、-lt-head-gt-、-lt-body-gt-、-lt-meta-gt-、-lt-title-gt"><a href="#5-lt-html-gt-、-lt-head-gt-、-lt-body-gt-、-lt-meta-gt-、-lt-title-gt" class="headerlink" title="5. &lt;html&gt;、&lt;head&gt;、&lt;body&gt;、&lt;meta&gt;、&lt;title&gt;"></a><strong>5. &lt;html&gt;、&lt;head&gt;、&lt;body&gt;、&lt;meta&gt;、&lt;title&gt;</strong></h2><p>①<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/html">&lt;html&gt;</a><br>表示一个HTML文档的根元素（顶级元素），所有其他元素必须是此元素的后代。在HTML语言中<html>可以省略，但最好还是写上。</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
……
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>
<p>在这里，属性lang表示language，表示该HTML文档是由什么语言书写的。比如这里lang的值是en，表示English，对于中文浏览器，如果安装了一些翻译插件，浏览器在加载这个这个页面时就会触发翻译行为。</p>
<p>②<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/head">&lt;head&gt;</a>、<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body">&lt;body&gt;</a><br>这两个元素必须作为&lt;html&gt;的子元素书写。<br><span style="color: red;">&lt;head&gt;</span>：这个元素里的内容不会显示在网页页面上，它包含一些配置信息（元数据），包括文档的标题，引用的文档样式和脚本等。<br><span style="color: red;">&lt;body&gt;</span>：文档主体元素，页面上所有要显示的内容都在这里。一般我们写代码就从这里开始写。</p>
<p>③<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/meta">&lt;meta&gt;</a><br>这是一个空元素，用来表示元数据，可以理解为一些附加信息，这些信息不会显示在网页上，而是起到一些其他作用。<br>比如，在VScode的默认HTML模板中，<head>的内容如下：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width, initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre>
<p>其中，<br><span style="color: red;">&lt;meta charset=”UTF-8”&gt;</span>是一个字符集声明，声明改文档使用的字符编码是UTF-8。<br><span style="color: red;">&lt;meta http-equiv=”X-UA-Compatible” content=”IE=edge”&gt;</span>用来专门告诉IE浏览器建议使用edge内核。<br><span style="color: red;">&lt;meta name=”viewport” content=”width=device-width, initial-scale=1.0”&gt;</span>用来适配移动端。  </p>
<p> ④<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/title">&lt;title&gt;</a><br>表示网页标题，显示在浏览器的选项卡上面。</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span> 就是这里 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/title.png" loading="lazy"></p>
<h2 id="6-web语义化"><a href="#6-web语义化" class="headerlink" title="6. web语义化"></a><strong>6. web语义化</strong></h2><p>语义化可以让页面具有良好的结构与含义，从而让人和机器都能快速理解网页内容。<br>比如你使用a元素给文本加上超链接时，网页中的文本会显示出下划线。这时我们就要严格根据语义化来理解这个事情：<span style="color: red;">不是因为我想要给文本加上下划线才使用a元素，而是我想让这段文字表示超链接才使用a元素</span>。“超链接”是语义化的问题，“下划线”是CSS的问题。也就是说，不是超链接的元素我可以通过CSS加上下划线样式，是超链接的元素我也可以通过CSS删掉下划线样式。<br>具体应用如：  </p>
<ul>
<li>搜索引擎优化（Search Engine Optimization，SEO）。  </li>
<li>浏览器的阅读模式、语音模式等。</li>
</ul>
<br>
<br>
<br>
<br>
<br>

</div>

<hr>
]]></content>
      <categories>
        <category>Web前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Web前端4：a元素（href、target）、路径</title>
    <url>/2021/11/29/web4/</url>
    <content><![CDATA[<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a">a元素</a>也称锚元素，主要用来表示超链接。HTML全称是超文本标记语言，之所以叫做超文本是因为它有着超链接，链接到其他的文档。超链接就是通过a元素实现的，所以a元素是HTML中使用频率数一数二的元素之一了。<br>a元素最核心的属性是href（hypertext reference），它的作用包括：  </p>
<ol>
<li>跳转到网址，这样的链接就叫URL。</li>
<li>跳转到锚点，这样的链接称锚链接。“锚”就是船锚，是船停泊时用的一个东西。在HTML中可以理解为“定位”。</li>
<li>功能链接，点击后触发某个功能。如触发js代码、发送邮件、拨打电话。</li>
</ol>
<p>下面一个个来解释。</p>
<h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a><strong>URL</strong></h2><p>在html文档&lt;body&gt;中插入如下代码：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    百度
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p>这样，网页中就会显示：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/href_baidu.png" loading="lazy"><br>点击这个超链接就会跳转到百度了。当然，文字和链接不一定非得是对应的，你也可以文字写为百度，链接设置为http://<span></span>www.<span></span>google.<span></span>com。<br>要注意的是，链接必须写全，即href属性值必须设置为“http://<span></span>www.<span></span>baidu.<span></span>com”，写成“www.<span></span>baidu.<span></span>com”或“<span></span>baidu.<span></span>com”都不行，会提示如下信息：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/href_baidu1.png" loading="lazy"><br>这个问题之后会介绍。  </p>
<h2 id="锚链接"><a href="#锚链接" class="headerlink" title="锚链接"></a><strong>锚链接</strong></h2><p>可使用如下代码快速生成测试用例：</p>
<pre class="language-html" data-language="html"><code class="language-html">((h2[id="chaper$"]>&#123;章节$&#125;)+p>lorem200)*6</code></pre>
<p>这里的“+”表示兄弟元素。在VScode输入这段文字后按Tab键可以生成如下代码（这里lorem太长了就用截图了）：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/maohref1.png" loading="lazy"><br>这里的属性<span style="color:red">id</span>表示元素在HTML文档中的唯一编号。<br>类似方法再生成6个a元素：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#chapter1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>章节1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#chapter2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>章节2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#chapter3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>章节3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#chapter4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>章节4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#chapter5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>章节5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#chapter6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>章节6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p>这样就可以实现一个带目录的网页了，点击相应的标题链接就能在当前页面跳转到相应的h2标题，不刷新页面。这个技巧在博客中常用到。<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/maohref2.png" loading="lazy"><br>如下代码可以回到顶部：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>回到顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/maohref3.png" loading="lazy">  </p>
<h2 id="功能性超链接"><a href="#功能性超链接" class="headerlink" title="功能性超链接"></a><strong>功能性超链接</strong></h2><p>①执行JS代码  </p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:alert(<span class="token punctuation">'</span>Hello, world!<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    Hello, world!
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/funhref1.png" loading="lazy"><br>②发送邮件  </p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mailto:10000@qq.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    Send mail
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/funhref12.png" loading="lazy"><br>所以执行这种功能需要你的计算机上安装邮件客户端。<br>③拨打电话</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tel:10010<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    Call
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/funhref3.png" loading="lazy"><br>这个功能一般应用在手机端。</p>
<h2 id="Target属性"><a href="#Target属性" class="headerlink" title="Target属性"></a><strong>Target属性</strong></h2><p>a元素的另一个主要属性是target。它有两个取值：<br><span style="color:red">_self</span>：在当前窗口打开新页面<br><span style="color:red">_blank</span>：在新窗口打开新页面<br>target的默认值一般是_self。</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    百度
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/target1.png" loading="lazy"><br>点击后：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/target2.png" loading="lazy">  </p>
<h2 id="路径"><a href="#路径" class="headerlink" title="路径"></a><strong>路径</strong></h2><p><strong>1. 站内资源、站外资源</strong><br>站内资源：当前网站的资源<br>站外资源：非当前网站的资源  </p>
<p><strong>2. 绝对路径、相对路径</strong><br>一般地，对站外资源使用绝对路径，对站内资源使用相对路径。</p>
<p><strong>3. 路径格式</strong><br>1)绝对路径书写格式：<span style="color:red">协议名://主机名:端口号/路径</span><br>协议名：http、https、ftp、file等。file表示本地文件。<br>主机名：域名、IP地址等。<br>端口号：http是80，https是443，一般被省略。<br>当跳转目标和当前页面的协议相同时，href属性值的协议可以省略（前提是使用VScode的Live Server插件打开）。如href可以写为<code>href=&quot;//www.baidu.com&quot;</code>。<br>如果使用本地文件打开就不行了，因为本地打开时它的协议是file：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/path1.png" loading="lazy"><br>同理，哪里相同哪里就可以省略，比如端口号就可以省略。</p>
<p>2)相对路径格式<br><span style="color:red">./</span>表示当前资源所在的目录，可以省略<br><span style="color:red">../</span>表示返回上一级目录<br>直接举例吧：<br>这是我的网站文件目录：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/path2.png" loading="lazy"><br>a.html：  </p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    百度
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./../index.html<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_self<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    index.html
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p>index.html：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./subhtmls/a.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    subhtmls -> a.html
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p>效果：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/path3.gif" loading="lazy">  </p>
<br>
<br>
<br>
<br>
<br>

<hr>
]]></content>
      <categories>
        <category>Web前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Web前端5：img元素以及和map元素联用、和figure元素联用；多媒体元素</title>
    <url>/2021/11/29/web5/</url>
    <content><![CDATA[<h2 id="1-img元素的使用"><a href="#1-img元素的使用" class="headerlink" title="1. img元素的使用"></a><strong>1. <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/img">img元素</a>的使用</strong></h2><p>img元素是一个空元素，它主要使用两个属性。<br>①<span style="color: red">src</span>。该属性是必须有的，表示你想嵌入的图片的文件路径，相对路径或绝对路径都可以。<br>②<span style="color: red">alt</span>。当图片文件被删除、路径不正确或者网不好等原因，导致图片加载不出来，就会显示一个“图裂”图标 + alt的内容。<br>正常情况：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/Yuki.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图裂<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/Yuki.png" loading="lazy"><br>图裂情况：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/不存在的图片.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>图裂<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/tulie.png" loading="lazy">  </p>
<br>

<h2 id="2-和a元素联用"><a href="#2-和a元素联用" class="headerlink" title="2. 和a元素联用"></a><strong>2. 和a元素联用</strong></h2><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.baidu.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/baidu.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
&lt;/a</code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/img+a.png" loading="lazy"><br>可以看到当鼠标指向baidu.png这张图片时，变为了小手形状，表示存在超链接，点击就会跳转到百度了。  </p>
<br>

<h2 id="3-和map元素联用"><a href="#3-和map元素联用" class="headerlink" title="3. 和map元素联用"></a><strong>3. 和<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/map">map元素</a>联用</strong></h2><p>map元素与<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/area">area元素</a>一起定义一个可点击的超链接区域。这个区域可以是很多形状。img元素和map元素、area元素的联用可以实现点击图片上的某些区域跳转到另外指定的超链接这个功能。<br>比如，这里有一张太阳系的图片：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/solarSystem.png" loading="lazy"><br>现在我们想实现如下功能：点击“木星”本身以及“木星”汉字都跳转到木星的百度百科，点击图片的其他位置跳转到银河系的百度百科。<br>这就要使用到map了。<br>map的shape属性表示区域形状，coords表示坐标。<br>shape取值circle表示圆形，取值rect表示矩形。<br>circle的coords属性值分别是“圆心x，圆心y，半径”。<br>rect的coords属性值分别是“矩形左上角x，矩形左上角y，矩形右下角x，矩形右下角y”。<br>坐标系规定如图，左上角是坐标原点，向右是x轴正方向，向下是y轴正方向，单位是像素：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/mapCord.png" loading="lazy"><br>推荐使用mspaint进行坐标测量。使用QQ截图也可以，但在那之前你得检查一下你的电脑的屏幕显示是不是100%，一般的笔记本都推荐设置为了125%，导致测量得不对。  </p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://baike.baidu.com/item/%E9%93%B6%E6%B2%B3%E7%B3%BB/189795?fr=aladdin<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>银河系<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">usemap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#solarMap<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/galaxy.png<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>map</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>solarMap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>area</span> <span class="token attr-name">shape</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>circle<span class="token punctuation">"</span></span> <span class="token attr-name">coords</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>448,295,40<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>木星<span class="token punctuation">"</span></span>
          <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://baike.baidu.com/item/%E6%9C%A8%E6%98%9F/222105?fr=aladdin<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>area</span> <span class="token attr-name">shape</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rect<span class="token punctuation">"</span></span> <span class="token attr-name">coords</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>519,281,590,320<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>木星<span class="token punctuation">"</span></span>
          <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://baike.baidu.com/item/%E6%9C%A8%E6%98%9F/222105?fr=aladdin<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>map</span><span class="token punctuation">></span></span></code></pre>
<p>效果：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/mapEffect.gif" loading="lazy">  </p>
<br>

<h2 id="4-和figure元素联用"><a href="#4-和figure元素联用" class="headerlink" title="4. 和figure元素联用"></a><strong>4. 和<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/figure">figure元素</a>联用</strong></h2><p>通常用figure元素把图片、图片标题、图片说明等元素打包在一起。用法很简单，但在语义化上的意义很重要。  </p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figure</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://baike.baidu.com/item/%E9%93%B6%E6%B2%B3%E7%B3%BB/189795?fr=aladdin<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>银河系<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">usemap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#solarMap<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./img/galaxy.png<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
    
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>figcaption</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>太阳系<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figcaption</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span><span class="token punctuation">></span></span>
        太阳系（英文：Solar system）是一个以太阳为中心，受太阳引力约束在一起的天体系统，包括太阳、行星及其卫星、矮行星、小行星、彗星和行星际物质。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        太阳系位于距银河系中心大约2.4~2.7万光年的位置（银河系的恒星数量约在1000亿到4000亿之间，太阳只是其中之一）。
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>figure</span><span class="token punctuation">></span></span></code></pre>
<p>figcaption是figure的子元素，表示图片标题。<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/figure.png" loading="lazy">  </p>
<br>

<h2 id="5-多媒体元素"><a href="#5-多媒体元素" class="headerlink" title="5. 多媒体元素"></a><strong>5. 多媒体元素</strong></h2><p><strong>①</strong><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/video"><strong>video</strong></a><br>值得注意的是，video元素不是空元素。在 &lt;video&gt;&lt;/video&gt; 标签中间的内容，是针对浏览器不支持此元素时候的降级处理。  </p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">controls</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./video/test.mp4<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>500px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>
    Sorry, your browser doesn't support embedded videos.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/video.png" loading="lazy"><br>图示视频是我从《真探 第一季》中截的一段。<br>其中，controls属性的功能是显示控件。像controls、autoplay这样的属性，取值只有两种状态：<br>1）不写<br>2）取值为属性名<br>这种属性称为<span style="color:red">布尔属性</span>。布尔属性在HTML5中可以不写属性值。<br>另外常用的布尔属性有autoplay、muted、loop。<span style="color:red">autoplay</span>表示打开网页自动播放。有些浏览器不允许自动播放，也就是说你写了autoplay它也不自动播放。这么做的原因是避免打开网页就放出了视频声音，吓到用户（个人体验确实不自动播放好些）。为此，有时也会再加上<span style="color:red">muted</span>这个自动静音的布尔属性，然后允许自动播放。<span style="color:red">loop</span>即循环播放。很多游戏的主页就是不断重复播放的、静音的、代表游戏的视频。  </p>
<p><strong>②</strong><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/audio"><strong>audio</strong></a><br>用法和video差不多相同。</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./audio/FELT - Beautiful Trick.mp3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    Your browser does not support the audio element.
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/audio.png" loading="lazy">  </p>
<br>

<h2 id="6-兼容性"><a href="#6-兼容性" class="headerlink" title="6. 兼容性"></a><strong>6. 兼容性</strong></h2><p>不同的浏览器支持的音视频格式可能不一致，控件样式可能也不同。<br>为了使开发出的网站有获得更好的兼容性，在嵌入多媒体元素时会这样写：  </p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">controls</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./video/test.mp4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./video/test.webm<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>对不起，你的浏览器不支持video元素，请换个新一点的浏览器。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span></code></pre>
<p>也就是准备多个不同格式的多媒体文件，让浏览器能用哪个就用哪个。<br>如果浏览器太旧，啥都不支持，就提示最后一句话。  </p>
<p><br><br><br><br><br></p>
<hr>
]]></content>
      <categories>
        <category>Web前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Web前端6：列表元素（有序列表ol、无序列表ul、定义列表dl）、容器元素、元素包含关系</title>
    <url>/2021/11/29/web6/</url>
    <content><![CDATA[<h2 id="1-有序列表ol"><a href="#1-有序列表ol" class="headerlink" title="1. 有序列表ol"></a><strong>1. 有序列表<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ol">ol</a></strong></h2><p>ol即order list，有序列表。<br>li表示list item，即列表条目，是列表的子元素。<br>type属性表示序号的显示方式，取值可以是1、A、a、I、i。<br>但序号长什么样子本来是应该由CSS负责的，所以在MDN中有这样一段注释：</p>
<blockquote>
<p>type属性在 HTML4中弃用，但是在 HTML5 中被重新引入。除非列表中序号很重要（比如，在法律或者技术文件中条目通常被需要所引用），否则请使用 CSS list-style-type属性替代。  </p>
</blockquote>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第一步：抓一只猫，让猫在强烈的政治攻击下承认自己是大象。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第二步：公布计划：生产一种能装进大象的冰箱，动员国民捐款。实际上并不生产。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第三步：收买证人，证明大象已经被装进冰箱里。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第四步：利用媒体优势反复强调“猫是大象的祖先”这一理论，以防后患。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/ol1.png" loading="lazy"><br>ol还有一个布尔属性是reversed，作用是将序号倒过来编排。</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span> <span class="token attr-name">reversed</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/ul_reversed.png" loading="lazy">  </p>
<br>

<h2 id="2-无序列表ul"><a href="#2-无序列表ul" class="headerlink" title="2. 无序列表ul"></a><strong>2. 无序列表<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul">ul</a></strong></h2><pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>
    七宗罪：
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>色欲<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>暴食<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>贪婪<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>懒惰<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>暴怒<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>嫉妒<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>傲慢<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/ul.png" loading="lazy"><br>相比于有序列表，无序列表使用频率更高，常用于菜单、新闻列表等。  </p>
<br>

<h2 id="3-定义列表dl"><a href="#3-定义列表dl" class="headerlink" title="3. 定义列表dl"></a><strong>3. 定义列表<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/dl">dl</a></strong></h2><p>dl即definition list，是一个包含术语定义以及描述的列表，通常用于展示词汇表或者元数据 （键-值对列表）。它通常包括两个子元素，分别是dt和dd。<br><span style="color:red">dt</span>，definition table，术语标题。<span style="color:red">dd</span>，definition description，术语描述。</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>
    Web前端的一些术语
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>
        HTML（HyperText Markup Language，超文本标记语言） 是一种描述语言，用来定义网页结构。
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>css<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>
        层叠样式表 (Cascading Style Sheets，缩写为 CSS），是一种 样式表 语言，用来描述 HTML 或 XML文档的呈现。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>
        CSS 描述了在屏幕、纸质、音频等其它媒体上的元素应该如何被渲染的问题。
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>javascript<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>
        JavaScript ( JS ) 是一种具有函数优先的轻量级，解释型或即时编译型的编程语言。
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span></code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/dl.png" loading="lazy"><br>在一些电影网站就有定义列表的应用。  </p>
<br>

<h2 id="4-容器元素"><a href="#4-容器元素" class="headerlink" title="4. 容器元素"></a><strong>4. 容器元素</strong></h2><p>容器元素表示一个块区域，内部用于放置其他元素。<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div">&lt;div&gt;</a>：一种通用的容器。<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/header">&lt;header&gt;</a>：用于表示页眉、文章的头部等。<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/footer">&lt;footer&gt;</a>：用于表示页脚、文章的尾部等。<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/article">&lt;article&gt;</a>：用于表示文章等。article一般包含header、div、footer等元素。<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section">&lt;section&gt;</a>：用于表示一个文章段落等。<br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/aside">&lt;aside&gt;</a>：用于表示附加信息，比如博客的侧边栏。<br>容器元素通常是和特定语义联系在一起，用来将网页划分区域。  </p>
<br>

<h2 id="5-元素包含关系"><a href="#5-元素包含关系" class="headerlink" title="5. 元素包含关系"></a>5. 元素包含关系</h2><p>在以前，规则是块级元素可以包含行级元素，行级元素不可以包含块级元素。</p>
<p>而现在，由于语义化的强调，元素的包含关系由元素的内容类别（语义）决定。</p>
<p>例如，h1元素能否包含p元素？从语义上看，h1表示标题，而p表示段落，显然标题是不能包含段落的，所以h1元素不能包含p元素。</p>
<p>想知道什么元素能包含什么元素很简单，MDN一搜就就行了。比如在MDN的<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul">&lt;ul&gt;</a>页面，有下图：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/elementInclude1.png" loading="lazy"><br>“允许的内容”便是ul可以包含的元素了。<br>元素的包含关系在MDN的<a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/Content_categories">内容分类</a>有详细定义。所有元素的严格包含关系是这样的：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/elementInclude2.png" loading="lazy">  </p>
<p><br><br><br><br><br></p>
<hr>
]]></content>
      <categories>
        <category>Web前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB拼图游戏设计</title>
    <url>/2021/11/26/matlabJigsaw/</url>
    <content><![CDATA[<p>这是我大三上学期《自动化软件工具》这门课的结课作业，也就是用MATLAB做一个项目出来。<br>参考于<a href="https://wuxian.blog.csdn.net/article/details/79219110">基于MATLAB的拼图游戏设计_思绪无限的博客-CSDN博客</a>。</p>
<br>

<h2 id="一-概述"><a href="#一-概述" class="headerlink" title="一. 概述"></a><strong>一. 概述</strong></h2><p>拼图是广为人知的一种游戏。这里的拼图游戏指的是华容道式的拼图，规则是有一幅3*3的打乱的拼图，包括8块拼图块，1格空白位置用来移动，点击空白处旁的拼图，则拼图将移动到空白处，游戏胜利条件是还原拼图。<br>MATLAB的图像处理和函数功能支持较为完善，本设计使用MATLAB通过m文件编程构造出了拼图游戏。有趣的是，MATLAB是matrix、laboratory两个词的组合，意为矩阵矩阵实验室，而本设计——拼图游戏的本质也是对矩阵进行操作，可以说是MATLAB的“灵魂”游戏。</p>
<br>

<h2 id="二-程序设计"><a href="#二-程序设计" class="headerlink" title="二. 程序设计"></a><strong>二. 程序设计</strong></h2><h3 id="2-1-分割拼图"><a href="#2-1-分割拼图" class="headerlink" title="2.1 分割拼图"></a><strong>2.1 分割拼图</strong></h3><p>首先要准备一张正方形图片用来拼，这里就拿我就读的中国矿业大学的校徽作为对象。校徽图片的宽度和高度都是300像素。因此，该jpeg图片在MATLAB工作区中的储存形式是一个300*300*3的矩阵。其中，“300*300”表示像素点的个数，“3”用来储存像素点的颜色，比如，这里我制作了一张只有一个白色像素点的图片（用mspaint制作的），在MATLAB中使用imread函数来读取这张图片，显示出数组信息如图：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/other/matlabJigsaw1.png" loading="lazy"><br>(255，255，255)即表示白色。<br>接下来，为便于解释，现把整个图片分为9个部分，编号如图所示：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/other/matlabJigsaw2.png" loading="lazy"><br>其中最后一个位置用作空白块，所以为了显示出其特殊性，编号为0而非编号为9。这样一来，运行<code>x1 = image(1:100, 1:100, :);</code>赋值语句之后，x1即是表示拼图块1的矩阵。<br>同理，有：</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab">x2 <span class="token operator">=</span> <span class="token function">image</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token operator">:</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">%拼图块2矩阵数据</span>
x3 <span class="token operator">=</span> <span class="token function">image</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">201</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token operator">:</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">%拼图块3矩阵数据</span>
x4 <span class="token operator">=</span> <span class="token function">image</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token operator">:</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">%拼图块4矩阵数据</span>
x5 <span class="token operator">=</span> <span class="token function">image</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token operator">:</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%拼图块5矩阵数据</span>
x6 <span class="token operator">=</span> <span class="token function">image</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">201</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token operator">:</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%拼图块6矩阵数据</span>
x7 <span class="token operator">=</span> <span class="token function">image</span><span class="token punctuation">(</span><span class="token number">201</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token operator">:</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">%拼图块7矩阵数据</span>
x8 <span class="token operator">=</span> <span class="token function">image</span><span class="token punctuation">(</span><span class="token number">201</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token operator">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token operator">:</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%拼图块8矩阵数据</span>
x0 <span class="token operator">=</span> <span class="token function">image</span><span class="token punctuation">(</span><span class="token number">201</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">201</span><span class="token operator">:</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token operator">:</span> <span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%拼图块0矩阵数据</span></code></pre>
<p>可使用axis on函数显示出横纵坐标帮助理解：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/other/matlabJigsaw3.png" loading="lazy"><br>接下来定义一个从原图中分割拼图块并标记编号的函数，不妨命名为<code>split(image, index)</code>，其中<code>image</code>为原图的数据矩阵，<code>index</code>为要选择的拼图块的编号。split函数的输出为矩阵x，是序号为index的拼图块的数据矩阵。<br>比如，运行语句<code>x2 = split(image, 5);</code>后，x2即表示校徽图片的最中央的拼图块的数据矩阵。<br>split函数内容如下：  </p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> x <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> index<span class="token punctuation">)</span>
  <span class="token keyword">if</span> index <span class="token operator">></span> <span class="token number">0</span>  <span class="token comment">%拼图块1~8</span>
    <span class="token comment">% 计算出行数row以及列数column</span>
    row <span class="token operator">=</span> <span class="token function">fix</span><span class="token punctuation">(</span><span class="token punctuation">(</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">%fix表示向零方向取整</span>
    column <span class="token operator">=</span> <span class="token function">mod</span><span class="token punctuation">(</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    x <span class="token operator">=</span> <span class="token function">image</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span>row<span class="token operator">*</span><span class="token number">100</span> <span class="token operator">:</span> <span class="token number">100</span><span class="token operator">*</span><span class="token punctuation">(</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">+</span>column<span class="token operator">*</span><span class="token number">100</span> <span class="token operator">:</span> <span class="token number">100</span><span class="token operator">*</span><span class="token punctuation">(</span>column<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">:</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">else</span>  <span class="token comment">%拼图块0 </span>
    x <span class="token operator">=</span> <span class="token function">uint8</span><span class="token punctuation">(</span><span class="token number">255</span> <span class="token operator">*</span> <span class="token function">ones</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">end</span></code></pre>
<h3 id="2-2-按编号矩阵显示拼图"><a href="#2-2-按编号矩阵显示拼图" class="headerlink" title="2.2 按编号矩阵显示拼图"></a><strong>2.2 按编号矩阵显示拼图</strong></h3><p>上一节已经实现通过序号获得小拼图块的数据矩阵。一幅拼图可以由一个3*3的矩阵A来表示，接下来编写一个根据编号矩阵A显示对应拼图图片的函数，命名为<code>drawmap(A)</code>，代码如下</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token function">drawmap</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span>
    origin <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'jigsawImage.jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    image <span class="token operator">=</span> origin<span class="token punctuation">;</span> 
    <span class="token keyword">for</span> row <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">3</span>   <span class="token comment">%根据编号矩阵A构建要显示的拼图数据矩阵image</span>
      <span class="token keyword">for</span> col <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">3</span>
        <span class="token function">image</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token punctuation">(</span>row<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span> <span class="token operator">:</span> <span class="token number">100</span><span class="token operator">*</span>row<span class="token punctuation">,</span> <span class="token number">1</span><span class="token operator">+</span><span class="token punctuation">(</span>col<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">100</span> <span class="token operator">:</span> <span class="token number">100</span><span class="token operator">*</span>col<span class="token punctuation">,</span> <span class="token operator">:</span> <span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">split</span><span class="token punctuation">(</span>origin<span class="token punctuation">,</span> <span class="token function">A</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">end</span>
    <span class="token keyword">end</span>
    <span class="token function">imshow</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span>  <span class="token comment">%显示拼图</span></code></pre>
<p>比如，假设矩阵A为<img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/other/matlabJigsaw4.png" loading="lazy">则运行<code>drawmap(A)</code>可得到：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/other/matlabJigsaw5.png" loading="lazy">  </p>
<h3 id="2-3-移动拼图"><a href="#2-3-移动拼图" class="headerlink" title="2.3 移动拼图"></a><strong>2.3 移动拼图</strong></h3><p>移动拼图的过程是：点击空白处旁的拼图，则拼图将移动到空白处。而拼图块和空白块的相对位置只有四种，即上下左右四种位置，按照这个想法，定义函数为<code>function tag = movejig(tag, row, col)</code>。其中，<code>tag</code>表示当前拼图的编号矩阵，<code>row</code>和<code>col</code>分别表示鼠标点击位置的行数和列数。输出为移动后得到的编号矩阵。</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> tag <span class="token operator">=</span> <span class="token function">movejig</span><span class="token punctuation">(</span>tag<span class="token punctuation">,</span> row<span class="token punctuation">,</span> col<span class="token punctuation">)</span>
<span class="token comment">%4个if分4种情况对不同位置处的点坐标与矩阵行列式统一</span>
  num <span class="token operator">=</span> <span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> col<span class="token punctuation">)</span><span class="token punctuation">;</span> 
  <span class="token comment">%鼠标位置与号码牌一致</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> col<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token comment">%点击位置在第2或3行，空白块在点击位置的上一行　　　　</span>
    <span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> col<span class="token punctuation">)</span> <span class="token operator">=</span> num<span class="token punctuation">;</span> 
    <span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> col<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">end</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> col<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token comment">%点击位置在第1或2行，空白块在点击位置的下一行</span>
    <span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> col<span class="token punctuation">)</span> <span class="token operator">=</span> num<span class="token punctuation">;</span>
    <span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> col<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">end</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>col<span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> col<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token comment">%点击位置在第2或3列，空白块在点击位置的左边一列</span>
    <span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> col<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> num<span class="token punctuation">;</span>
    <span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> col<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">end</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>col<span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> col<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>
  <span class="token comment">%点击位置在第2或3列，空白块在点击位置的右边一列</span>
    <span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> col<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> num<span class="token punctuation">;</span>
    <span class="token function">tag</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> col<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">end</span></code></pre>
<h3 id="2-4-打乱拼图"><a href="#2-4-打乱拼图" class="headerlink" title="2.4 打乱拼图"></a><strong>2.4 打乱拼图</strong></h3><p>这里需要注意，不可以使用<code>rand</code>函数生成一个由数字0~8随机排列构成的3*3的矩阵作为拼图矩阵，因为那样生成的矩阵大概率无法还原为原图，这在数学上是有证明的。<br>这里采取另一种想法来打乱拼图，即随机移动初始拼图使其打乱。取循环400次（也可以更多，但400次已经足够了），每次使用<code>rand</code>函数随机生成模拟点击的行列数，然后调用上述定义的<code>movejig</code>函数进行移动。定义函数为<code>function y = Disrupt()</code>，代码如下</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> y <span class="token operator">=</span> <span class="token function">Disrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
<span class="token comment">%随机打乱原拼图排列顺序</span>
  y <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">;</span> <span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">;</span> <span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">%原始的拼图矩阵</span>
  <span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">400</span>
    row <span class="token operator">=</span> <span class="token function">randi</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    col <span class="token operator">=</span> <span class="token function">randi</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    y <span class="token operator">=</span> <span class="token function">movejig</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> row<span class="token punctuation">,</span> col<span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token keyword">end</span></code></pre>
<h3 id="2-5-拼图主函数和回调函数"><a href="#2-5-拼图主函数和回调函数" class="headerlink" title="2.5 拼图主函数和回调函数"></a><strong>2.5 拼图主函数和回调函数</strong></h3><p>主函数是一个整合中心，用来整合调用各已定义好的子函数。<br>另外，很明显主函数需要重复获得鼠标点击时的位置坐标来进行拼图游戏，也要有游戏胜利的终止条件。这里采用figure的<code>WindowButtonDownFcn</code>属性，MATLAB官方文件中对其介绍如下：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/other/matlabJigsaw6.png" loading="lazy"><br>据此可以结合<code>set</code>函数、gcf图形句柄和函数句柄定义一个获取鼠标点击坐标的回调函数。当在图上按下鼠标左键的时候，就自动执行回调函数来获取坐标值，同时在回调函数中判断游戏是否胜利。<br>主函数：</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token function">jigsaw</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">%主函数</span>
  Tag_A <span class="token operator">=</span> <span class="token function">Disrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%获得打乱好的拼图编号矩阵</span>
  <span class="token function">drawmap</span><span class="token punctuation">(</span>Tag_A<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">%按照编号矩阵显示拼图</span>
  global Tag<span class="token punctuation">;</span>        <span class="token comment">%Tag是游戏过程中的拼图编号矩阵，定义为全局变量以方便参 数传递</span>
  Tag <span class="token operator">=</span> Tag_A<span class="token punctuation">;</span>
  <span class="token function">set</span><span class="token punctuation">(</span>gcf<span class="token punctuation">,</span> <span class="token string">'WindowButtonDownFcn'</span><span class="token punctuation">,</span> <span class="token operator">@</span>ButtonDownFcn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">%点击鼠标时调用ButtonDownFcn函数</span></code></pre>
<p>回调函数：</p>
<pre class="language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token function">ButtonDownFcn</span><span class="token punctuation">(</span>src<span class="token punctuation">,</span>event<span class="token punctuation">)</span>
<span class="token comment">%回调函数，鼠标点击事件发生时调用</span>
  pt <span class="token operator">=</span> <span class="token function">get</span><span class="token punctuation">(</span>gca<span class="token punctuation">,</span> <span class="token string">'CurrentPoint'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">%获取当前鼠标点击位置坐标</span>
  xpos <span class="token operator">=</span> <span class="token function">pt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">%鼠标点击处的横坐标实际值</span>
  ypos <span class="token operator">=</span> <span class="token function">pt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment">%鼠标点击处的纵坐标实际值</span>
  col <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span>xpos<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">%将横坐标值转换为列数,ceil表示向无穷大方向取整</span>
  row <span class="token operator">=</span> <span class="token function">ceil</span><span class="token punctuation">(</span>ypos<span class="token operator">/</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment">%将纵坐标值转换为行数</span>
  global Tag<span class="token punctuation">;</span>                    <span class="token comment">%全局变量声明</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>col <span class="token operator">&lt;=</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> col <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>row <span class="token operator">&lt;=</span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> row <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token comment">%鼠标点击位置在有效范围内    </span>
    Tag <span class="token operator">=</span> <span class="token function">movejig</span><span class="token punctuation">(</span>Tag<span class="token punctuation">,</span> row<span class="token punctuation">,</span> col<span class="token punctuation">)</span><span class="token punctuation">;</span>      　　　　　 <span class="token comment">%按点击位置移动拼图</span>
    <span class="token function">drawmap</span><span class="token punctuation">(</span>Tag<span class="token punctuation">)</span>                     <span class="token comment">%显示拼图</span>
    order <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span> <span class="token number">2</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token number">6</span><span class="token punctuation">;</span> <span class="token number">7</span> <span class="token number">8</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">%原图的编号矩阵</span>
    zt <span class="token operator">=</span> <span class="token function">abs</span><span class="token punctuation">(</span>Tag <span class="token operator">-</span> order<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment">%比较两个矩阵,要加绝对值</span>
    <span class="token keyword">if</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">zt</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>               <span class="token comment">%与原图已吻合</span>
　      image <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span><span class="token string">'jigsawImage.jpeg'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
　      <span class="token function">imshow</span><span class="token punctuation">(</span>image<span class="token punctuation">)</span>                <span class="token comment">%游戏完成，显示全图</span>
　      <span class="token function">msgbox</span><span class="token punctuation">(</span><span class="token string">'恭喜完成！'</span><span class="token punctuation">)</span>   
　      <span class="token keyword">pause</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        
　      close all 
    <span class="token keyword">end</span>
  <span class="token keyword">else</span>
      <span class="token keyword">return</span>
  <span class="token keyword">end</span></code></pre>
<p>至此，拼图游戏设计完成。  </p>
<br>

<h2 id="三、结果分析"><a href="#三、结果分析" class="headerlink" title="三、结果分析"></a><strong>三、结果分析</strong></h2><p>点击运行程序，会显示打乱好的拼图：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/other/matlabJigsaw7.png" loading="lazy"><br>点击空白块旁边的拼图，会移动拼图块：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/other/matlabJigsaw8.png" loading="lazy"><br>完成拼图后会提示“恭喜完成”：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/other/matlabJigsaw9.png" loading="lazy"><br>稍作修改，也可以将该程序改为4*4、5*5、……的拼图游戏。主要需要修改循环次数、行列数、行列计算公式、原始数据矩阵等，disrupt函数中的随机点击的次数也应适当增加。我做了个10*10的拼图游戏，效果如图<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/other/matlabJigsaw10.png" loading="lazy"><br>另外，结合tic toc指令，还可以实现游戏计时功能：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/other/matlabJigsaw11.png" loading="lazy">  </p>
<br>

<h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a><strong>四、总结</strong></h2><p>通过本次课程设计，我对课堂上学过的函数的定义、if语句、for循环语句等内容掌握得更加熟练。也学会了一些MATLAB中的图像处理方法，以及将图片与矩阵结合进行操作的思想。<br>另外，我本身就对编程有着很大的兴趣，所以做这份课程设计对我来说是一件愉快的事情。</p>
<br>

<p>github：<a href="https://github.com/tangjan/MATLAB_jigsaw">tangjan/MATLAB_jigsaw</a></p>
<p><br><br><br><br><br></p>
<hr>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>Web前端7：为网页添加样式</title>
    <url>/2021/12/02/web7/</url>
    <content><![CDATA[<h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a><strong>简单介绍</strong></h2><p>可以说一个网页的1/4是html，3/4是CSS。（先不提js）<br>html文件body中随便写点东西：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>
    现在开始添加CSS样式
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></code></pre>

<p>在html文件的head中插入&lt;style&gt;元素，内容如下：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
    <span class="token selector">h1</span><span class="token punctuation">&#123;</span>
        <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
        <span class="token property">background-color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span>
        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>则网页中可以看到，h1的内容红色，背景为浅蓝色，居中显示：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/CSS1.png" loading="lazy"></p>
<p>术语解释：<br>整个<code>h1&#123; &#125;</code>的内容叫做一条CSS规则。CSS规则 = 选择器 + 声明块  </p>
<p><span style="color:red">选择器</span>用来选中元素，设置样式适用的范围。比如这里写着<code>h1</code>就选中了h1元素，被选中的元素会被渲染为声明块声明的样式。</p>
<p><span style="color:red">声明块</span>出现在大括号中，包含CSS样式声明，也可以叫做属性。每一个属性表达某一方面的样式。  学习HTML时主要是学一个个元素，那么学CSS的时候就是学声明块里的一个个属性（样式规则）。</p>
<br>

<h2 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a><strong>选择器</strong></h2><p>选择器的写法有很多，这里介绍3种最基本的：元素选择器、id选择器、类选择器  </p>
<h3 id="元素选择器"><a href="#元素选择器" class="headerlink" title="元素选择器"></a><strong>元素选择器</strong></h3><p>写什么元素就设置为什么元素的名字，上面的<code>h1</code>就是元素选择器。会选中<span style="color:red">所有的</span>同名元素。<br>比如我们再加上</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>
  Lorem ipsum dolor sit amet consectetur adipisicing elit. 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre>

<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">p</span><span class="token punctuation">&#123;</span>
      <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>得到：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/CSS2.png" loading="lazy"></p>
<h3 id="id选择器"><a href="#id选择器" class="headerlink" title="id选择器"></a><strong>id选择器</strong></h3><p>在上述代码中再加上：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">#test</span> <span class="token punctuation">&#123;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> gold<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>test<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
  id选择器示例
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre>
<p>得到：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/CSS3.png" loading="lazy"><br>id是独一无二的，所以id选择器只能选中一个。通常js用的多。  </p>
<h3 id="类选择器"><a href="#类选择器" class="headerlink" title="类选择器"></a><strong>类选择器</strong></h3><p>元素选择器范围太广，id选择器范围又太小，所以“中庸之道”类选择器被应用得最多。<br>在上述代码中再加上：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.xxx</span><span class="token punctuation">&#123;</span>
      <span class="token property">color</span><span class="token punctuation">:</span>hotpink<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>

<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xxx<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 
    类选择器示例
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xxx<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    类选择器示例
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre>
<p>得到：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/CSS4.png" loading="lazy"></p>
<p>一个元素可以同时被划分到多个类中，所以也就可以同时应用多个CSS规则，如</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.big-center</span><span class="token punctuation">&#123;</span>
      <span class="token property">font-size</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>
      <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p><code>2em</code>表示将字符放大到标准字体的2倍。</p>
<p><span style="color:red;">插曲小tip</span>：<br>两种常用的命名方式:<br>①驼峰命名法，如bigCenter<br>②短横线命名法，如big-center<br>这里采用了短横线命名法。</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xxx big-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> 
    类选择器示例
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xxx big-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    类选择器示例
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre>
<p>得到：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/CSS5.png" loading="lazy"></p>
<br>

<h2 id="CSS代码书写位置"><a href="#CSS代码书写位置" class="headerlink" title="CSS代码书写位置"></a><strong>CSS代码书写位置</strong></h2><p>分3种情况：  </p>
<h3 id="1-内部样式表"><a href="#1-内部样式表" class="headerlink" title="1) 内部样式表"></a><strong>1) 内部样式表</strong></h3><p>就是写在html文档里。一般放在&lt;style&gt;里面。也不是一定要写在&lt;style&gt;里面，放在&lt;body&gt;里也是允许的。但是我们希望浏览器加载网页时最先把CSS样式加载好。不然的话浏览器如果先加载的是body内容后加载style内容，一开始页面会显示得很丑，然后等样式加载上去了会闪烁一下，很烦。  当然如果是在本地，或网速非常快，那&lt;style&gt;在哪都无所谓。  </p>
<h3 id="2-内联样式表-元素样式表"><a href="#2-内联样式表-元素样式表" class="headerlink" title="2) 内联样式表/元素样式表"></a><strong>2) 内联样式表/元素样式表</strong></h3><p>把style直接写到想渲染的元素里，这个时候就不需要什么选择器了，毕竟已经直接定位了。我在写博客时就经常用这个技巧把某些字局渲染为红色。</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span>插曲小tip<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>：  </code></pre>
<p><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/CSS6.png" loading="lazy"></p>
<h3 id="3-外部样式表"><a href="#3-外部样式表" class="headerlink" title="3) 外部样式表"></a><strong>3) 外部样式表</strong></h3><p>将样式书写到独立的CSS文件中，这是开发一个网站最常用的方式。<br>我的网站文件目录：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/waibu1.png" loading="lazy"><br>在&lt;head&gt;中加入：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/index.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre>
<p>注意link是个空元素，以后还会介绍它的其他用法。<br>&lt;link&gt;也不是必须写在head里面，但还是推荐写在head里面，理由和内部样式表一样。<br>&lt;body&gt;中正常写：</p>
<pre class="language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>big-blueviolet-center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
    外部样式表测试
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p>效果：<br><img src="https://cdn.jsdelivr.net/gh/tangjan/imgBed/posts/Web%E5%89%8D%E7%AB%AF/waibu2.png" loading="lazy"><br>实际开发中还是推荐使用外部样式表，原因：  </p>
<ul>
<li>外部样式表可以解决多页面样式重复的问题，提高效率。  </li>
<li>有利于浏览器缓存，提高页面响应速度。  </li>
<li>代码分离，html代码和css代码分开，更容易阅读和维护。维护代码时肯定是越简洁越好，所以代码分离的作用是很大的。</li>
</ul>
<p><br><br><br><br><br></p>
<hr>
]]></content>
      <categories>
        <category>Web前端</category>
      </categories>
      <tags>
        <tag>前端</tag>
      </tags>
  </entry>
</search>
